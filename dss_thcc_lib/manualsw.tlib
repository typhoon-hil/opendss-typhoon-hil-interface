// Edit only the code, do not open and save from TSE.
// See the file "tse_component_edit.tlib" if you want to edit this component on TSE.
library "OpenDSS" {

    component Subsystem Root {

        component Subsystem "Manual Switch" {
            layout = static
            component "core/Short Circuit" SC_A {
                circuit_connector = "true"
            }
            [
                position = 7744, 7856
            ]

            component "core/Short Circuit" SC_B {
                circuit_connector = "true"
            }
            [
                position = 7744, 7952
            ]

            component "core/Short Circuit" SC_C {
                circuit_connector = "true"
            }
            [
                position = 7744, 8048
            ]

            port A1 {
                label = "A1"
                position = -32, -32
                kind = pe
                direction =  in
            }
            [
                position = 7600, 7856
                hide_name = True
            ]

            port B1 {
                label = "B1"
                position = -32, 0
                kind = pe
                direction =  in
            }
            [
                position = 7600, 7952
                hide_name = True
            ]

            port C1 {
                label = "C1"
                position = -32, 32
                kind = pe
                direction =  in
            }
            [
                position = 7600, 8048
                hide_name = True
            ]

            port A2 {
                label = "A2"
                position = 32, -32
                kind = pe
                direction =  in
            }
            [
                position = 7872, 7856
                scale = -1, 1
                hide_name = True
            ]

            port B2 {
                label = "B2"
                position = 32, 0
                kind = pe
                direction =  in
            }
            [
                position = 7872, 7952
                scale = -1, 1
                hide_name = True
            ]

            port C2 {
                label = "C2"
                position = 32, 32
                kind = pe
                direction =  in
            }
            [
                position = 7872, 8048
                scale = -1, 1
                hide_name = True
            ]

            connect SC_A.p_node A1 as Connection1
            connect SC_A.n_node A2 as Connection2
            connect SC_B.p_node B1 as Connection3
            connect SC_B.n_node B2 as Connection4
            connect SC_C.n_node C2 as Connection5
            connect SC_C.p_node C1 as Connection6

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Manual switch.</p></body></html>"

                switch_status {
                    label = "Closed switch"
                    widget = checkbox
                    type = bool
                    default_value = "True"
                    no_evaluate

                    CODE property_value_changed
                        comp_script = return_comp_script(mdl, container_handle)
                        comp_script.update_inner_structure(mdl, container_handle, new_value)
                    ENDCODE
                }

                CODE open
                    import opendssdirect as dss
                    sw_status_prop = mdl.prop(item_handle, "switch_status")
                    switch_status = mdl.get_property_value(sw_status_prop)

                    try: # Error if the circuit has been just loaded
                        dss.Circuit.SetActiveElement(f"Line.{mdl.get_name(mdl.get_parent(item_handle))}")
                        if switch_status == False:
                            dss.CktElement.Open()
                        elif switch_status == True:
                            dss.CktElement.Close()
                    except:
                        pass

                    mdl.set_property_value(sw_status_prop, not switch_status)
                    mdl.refresh_icon(item_handle)
                ENDCODE

                CODE define_icon
                    import dss_thcc_lib.component_scripts.comp_manualsw as comp_script
                    comp_script.define_icon(mdl, item_handle)
                ENDCODE

                CODE init
                    import importlib

                    import dss_thcc_lib.component_scripts.comp_manualsw as comp_script
                    importlib.reload(comp_script)
                    def return_comp_script(mdl, item_handle):
                        return comp_script

                    comp_script.define_icon(mdl, item_handle)
                ENDCODE
            }
        }
        [
            position = 4768, 4064
            size = 64, 96
        ]

    }

}
